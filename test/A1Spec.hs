{-# LANGUAGE OverloadedStrings #-}

module A1Spec where

import Data.ByteString ()
import Test.Hspec

import Crypto.HPKE

spec :: Spec
spec = do
    describe "A.1. DHKEM(X25519, HKDF-SHA256), HKDF-SHA256, AES-128-GCM" $ do
        it "A.1.1. Base Setup Information" $ do
            let info =
                    "\x4f\x64\x65\x20\x6f\x6e\x20\x61\x20\x47\x72\x65\x63\x69\x61\x6e\x20\x55\x72\x6e"
                skEm =
                    "\x52\xc4\xa7\x58\xa8\x02\xcd\x8b\x93\x6e\xce\xea\x31\x44\x32\x79\x8d\x5b\xaf\x2d\x7e\x92\x35\xdc\x08\x4a\xb1\xb9\xcf\xa2\xf7\x36"
                        :: EncodedSecretKey
                pkEm =
                    "\x37\xfd\xa3\x56\x7b\xdb\xd6\x28\xe8\x86\x68\xc3\xc8\xd7\xe9\x7d\x1d\x12\x53\xb6\xd4\xea\x6d\x44\xc1\x50\xf7\x41\xf1\xbf\x44\x31"
                        :: EncodedPublicKey
                skRm =
                    "\x46\x12\xc5\x50\x26\x3f\xc8\xad\x58\x37\x5d\xf3\xf5\x57\xaa\xc5\x31\xd2\x68\x50\x90\x3e\x55\xa9\xf2\x3f\x21\xd8\x53\x4e\x8a\xc8"
                        :: EncodedSecretKey
                pkRm =
                    "\x39\x48\xcf\xe0\xad\x1d\xdb\x69\x5d\x78\x0e\x59\x07\x71\x95\xda\x6c\x56\x50\x6b\x02\x73\x29\x79\x4a\xb0\x2b\xca\x80\x81\x5c\x4d"
                        :: EncodedPublicKey
            (enc, ctxS) <-
                setupBaseS' DHKEM_X25519_HKDF_SHA256 HKDF_SHA256 AES_128_GCM skEm pkEm pkRm info
            ctxR <-
                setupBaseR DHKEM_X25519_HKDF_SHA256 HKDF_SHA256 AES_128_GCM skRm pkRm pkEm info
            enc `shouldBe` pkEm
            let pt = "Beauty is truth, truth beauty"
                aad0 = "\x43\x6f\x75\x6e\x74\x2d\x30"
                ct0 =
                    "\xf9\x38\x55\x8b\x5d\x72\xf1\xa2\x38\x10\xb4\xbe\x2a\xb4\xf8\x43\x31\xac\xc0\x2f\xc9\x7b\xab\xc5\x3a\x52\xae\x82\x18\xa3\x55\xa9\x6d\x87\x70\xac\x83\xd0\x7b\xea\x87\xe1\x3c\x51\x2a"
            ct0' <- seal ctxS aad0 pt
            ct0' `shouldBe` ct0
            pt0 <- open ctxR aad0 ct0
            pt0 `shouldBe` pt
            let aad1 = "\x43\x6f\x75\x6e\x74\x2d\x31"
                ct1 =
                    "\xaf\x2d\x7e\x9a\xc9\xae\x7e\x27\x0f\x46\xba\x1f\x97\x5b\xe5\x3c\x09\xf8\xd8\x75\xbd\xc8\x53\x54\x58\xc2\x49\x4e\x8a\x6e\xab\x25\x1c\x03\xd0\xc2\x2a\x56\xb8\xca\x42\xc2\x06\x3b\x84"
            ct1' <- seal ctxS aad1 pt
            ct1' `shouldBe` ct1
            pt1 <- open ctxR aad1 ct1
            pt1 `shouldBe` pt

        it "A.1.2. PSK Setup Information" $ do
            let info =
                    "\x4f\x64\x65\x20\x6f\x6e\x20\x61\x20\x47\x72\x65\x63\x69\x61\x6e\x20\x55\x72\x6e"
            let skEm =
                    "\x46\x34\x26\xa9\xff\xb4\x2b\xb1\x7d\xbe\x60\x44\xb9\xab\xd1\xd4\xe4\xd9\x5f\x90\x41\xce\xf0\xe9\x9d\x78\x24\xee\xf2\xb6\xf5\x88"
                        :: EncodedSecretKey
                pkEm =
                    "\x0a\xd0\x95\x0d\x9f\xb9\x58\x8e\x59\x69\x0b\x74\xf1\x23\x7e\xcd\xf1\xd7\x75\xcd\x60\xbe\x2e\xca\x57\xaf\x5a\x4b\x04\x71\xc9\x1b"
                        :: EncodedPublicKey
                skRm =
                    "\xc5\xeb\x01\xeb\x45\x7f\xe6\xc6\xf5\x75\x77\xc5\x41\x3b\x93\x15\x50\xa1\x62\xc7\x1a\x03\xac\x8d\x19\x6b\xab\xbd\x4e\x5c\xe0\xfd"
                        :: EncodedSecretKey
                pkRm =
                    "\x9f\xed\x7e\x8c\x17\x38\x75\x60\xe9\x2c\xc6\x46\x2a\x68\x04\x96\x57\x24\x6a\x09\xbf\xa8\xad\xe7\xae\xfe\x58\x96\x72\x01\x63\x66"
                        :: EncodedPublicKey
                psk =
                    "\x02\x47\xfd\x33\xb9\x13\x76\x0f\xa1\xfa\x51\xe1\x89\x2d\x9f\x30\x7f\xbe\x65\xeb\x17\x1e\x81\x32\xc2\xaf\x18\x55\x5a\x73\x8b\x82"
                psk_id =
                    "\x45\x6e\x6e\x79\x6e\x20\x44\x75\x72\x69\x6e\x20\x61\x72\x61\x6e\x20\x4d\x6f\x72\x69\x61"
            (enc, ctxS) <-
                setupPSKS'
                    DHKEM_X25519_HKDF_SHA256
                    HKDF_SHA256
                    AES_128_GCM
                    skEm
                    pkEm
                    pkRm
                    info
                    psk
                    psk_id
            ctxR <-
                setupPSKR
                    DHKEM_X25519_HKDF_SHA256
                    HKDF_SHA256
                    AES_128_GCM
                    skRm
                    pkRm
                    pkEm
                    info
                    psk
                    psk_id
            enc `shouldBe` pkEm
            let pt = "Beauty is truth, truth beauty"
                aad0 = "\x43\x6f\x75\x6e\x74\x2d\x30"
                ct0 =
                    "\xe5\x2c\x6f\xed\x7f\x75\x8d\x0c\xf7\x14\x56\x89\xf2\x1b\xc1\xbe\x6e\xc9\xea\x09\x7f\xef\x4e\x95\x94\x40\x01\x2f\x4f\xeb\x73\xfb\x61\x1b\x94\x61\x99\xe6\x81\xf4\xcf\xc3\x4d\xb8\xea"
            ct0' <- seal ctxS aad0 pt
            ct0' `shouldBe` ct0
            pt0 <- open ctxR aad0 ct0
            pt0 `shouldBe` pt
            let aad1 = "\x43\x6f\x75\x6e\x74\x2d\x31"
                ct1 =
                    "\x49\xf3\xb1\x9b\x28\xa9\xea\x9f\x43\xe8\xc7\x12\x04\xc0\x0d\x4a\x49\x0e\xe7\xf6\x13\x87\xb6\x71\x9d\xb7\x65\xe9\x48\x12\x3b\x45\xb6\x16\x33\xef\x05\x9b\xa2\x2c\xd6\x24\x37\xc8\xba"
            ct1' <- seal ctxS aad1 pt
            ct1' `shouldBe` ct1
            pt1 <- open ctxR aad1 ct1
            pt1 `shouldBe` pt
